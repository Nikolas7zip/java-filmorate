CREATE TABLE IF NOT EXISTS genre (
    id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar(32) NOT NULL
);

CREATE TABLE IF NOT EXISTS mpa_rating (
    id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar(10) NOT NULL
);

CREATE TABLE IF NOT EXISTS film (
    id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar(128) NOT NULL,
    description varchar(200) NOT NULL,
    release_date date NOT NULL,
    duration int NOT NULL,
    mpa_id int NOT NULL REFERENCES mpa_rating(id),
    CONSTRAINT check_date CHECK ( release_date >= '1895-12-28'),
    CONSTRAINT check_duration CHECK ( duration > 0 )
);

CREATE TABLE IF NOT EXISTS app_user (
    id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email varchar(255) NOT NULL,
    login varchar(64) NOT NULL,
    name varchar(64) NOT NULL,
    birthday date NOT NULL
);

CREATE TABLE IF NOT EXISTS film_genre (
    id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    film_id int NOT NULL REFERENCES film(id),
    genre_id int NOT NULL REFERENCES genre(id),
    CONSTRAINT uc_film_genre UNIQUE (film_id, genre_id)
);

CREATE TABLE IF NOT EXISTS user_friend (
    id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id int NOT NULL REFERENCES app_user(id),
    friend_id int NOT NULL REFERENCES app_user(id),
    CONSTRAINT check_users_not_equal CHECK ( user_id <> friend_id ),
    CONSTRAINT uc_user_friend UNIQUE (user_id, friend_id)
);

CREATE TABLE IF NOT EXISTS film_like (
    id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    film_id int NOT NULL REFERENCES film(id),
    user_id int NOT NULL REFERENCES app_user(id),
    CONSTRAINT uc_film_like_user UNIQUE (film_id, user_id)
);